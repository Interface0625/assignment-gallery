{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Navbar.js","App.js","theme.js","index.js"],"names":["useStyles","makeStyles","h2Style","fontFamily","textAlign","marginTop","fontSize","pStyle","Title","classes","className","Typography","color","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","style","width","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","map","key","src","alt","h1Style","fontStyle","letterSpacing","fontWeight","addAPhoto","Navbar","Box","component","AppBar","background","Toolbar","AddAPhoto","App","theme","createMuiTheme","palette","primary","main","blue","secondary","lightGreen","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.013bea3b.chunk.js","sourcesContent":["import React from 'react';\nimport { Typography } from '@material-ui/core' \nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n  h2Style : {\n    fontFamily: \"Arial Black, Gadget, sans-serif\",\n    textAlign: \"center\",\n    marginTop: \"100px\",\n    fontSize: \"45px\",\n  },\n  pStyle : {\n    textAlign: \"center\",\n    fontFamily: \"Verdana, Geneva, sans-serif\",\n  },\n});\n\nconst Title = () => {\n  const classes = useStyles();\n  return (\n    <div className=\"title\">\n      <Typography className={classes.h2Style} color=\"secondary\">Mina Bilder</Typography>\n      <Typography className={classes.pStyle}>Ladda upp foton</Typography>\n    </div>\n  )\n}\n\nexport default Title;","import * as firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/firestore';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCx25A2XxZvN3dfcBJBzkimKVCgK1aVp_Q\",\n    authDomain: \"heidar-fotogalleri.firebaseapp.com\",\n    databaseURL: \"https://heidar-fotogalleri.firebaseio.com\",\n    projectId: \"heidar-fotogalleri\",\n    storageBucket: \"heidar-fotogalleri.appspot.com\",\n    messagingSenderId: \"503459001495\",\n    appId: \"1:503459001495:web:f94d80d1370fa79212e5d2\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  const projectStorage = firebase.storage();\n  const projectFirestore = firebase.firestore();\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\n  export{ projectStorage , projectFirestore, timestamp };\n  ","import { useState , useEffect} from 'react';\nimport { projectStorage , projectFirestore, timestamp } from '../firebase/config';\n\nconst useStorage = (file) => {\n    const [progress , setProgress] = useState(0);\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n\n    useEffect(() => {\n\n        const storageRef = projectStorage.ref(file.name);\n        const collectionRef = projectFirestore.collection('images');\n\n        storageRef.put(file).on('state_changed', (snap) => {\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n            setProgress(percentage);\n        }, (err) => {\n            setError(err);\n        }, async () => {\n           const url = await storageRef.getDownloadURL();\n           const createdAt = timestamp();\n           collectionRef.add({url, createdAt });\n           setUrl(url); \n        })\n    }, [file]);\n\n    return {progress, url, error}\n\n}\n\nexport default useStorage;","import React, { useEffect } from 'react';\nimport useStorage from '../hooks/useStorage';\n\nconst ProgressBar = ({ file, setFile}) => {\n    const { url, progress } = useStorage(file);\n    \n    useEffect(() => {\n        if(url) {\n            setFile(null);\n        }\n\n    }, [url, setFile])\n\n    return (\n        <div className=\"progress-bar\" style={{ width: progress + '%' }}></div>\n    )\n\n}\n\nexport default ProgressBar;","import React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\n\n\nconst UploadForm = () => {\n    const [file, setFile] = useState(null);\n    const [error, setError] = useState(null);\n\n    const types = ['image/png', 'image/jpeg'];\n\n    const changeHandler = (e) => {\n        let selected = e.target.files[0];\n        \n        if (selected && types.includes(selected.type)) {\n            setFile(selected);\n            setError('');\n        } else {\n            setFile(null);\n            setError('Var vänlig och välj filformaten \"png eller jpeg\"')\n        }\n    }\n\n    return (\n        <form>\n            <label>\n                <input type=\"file\" onChange={changeHandler} />\n                <span>klicka här</span>\n            </label>\n            <div className=\"output\">\n                { error && <div className=\"error\"> { error }</div>}\n                { file && <div> {file.name} </div> }\n                { file && <ProgressBar file={file} setFile={setFile} /> }\n            </div>\n        </form>\n    )\n\n}\n\nexport default UploadForm;","import { useState , useEffect} from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collection) => {\n    const [docs, setDocs] = useState([]);\n\n    useEffect(() => {\n        const unsub = projectFirestore.collection(collection)\n            .orderBy('createdAt', 'desc')\n            .onSnapshot((snap) => {\n                let documents = [];\n                snap.forEach(doc => {\n                    documents.push({...doc.data(), id: doc.id})\n                });\n                setDocs(documents);\n            });\n\n        return () => unsub();\n    }, [collection])\n\n    return {docs};\n}\n\nexport default useFirestore;","import React from 'react';\nimport useFirestore from '../hooks/useFirestore';\n\nconst ImageGrid = () => {\n    const { docs } = useFirestore('images');\n\n\n    return (\n        <div className=\"img-grid\">\n            { docs && docs.map(doc => (\n                <div className=\"img-wrap\" key={doc.id}>\n                <img src={doc.url} alt=\"uppladdat foto\" />\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default ImageGrid;","import React from 'react';\nimport { AppBar, Toolbar, Typography, Box} from '@material-ui/core';\nimport { AddAPhoto } from '@material-ui/icons'; \nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    h1Style : {\n      fontStyle: \"oblique\",\n      fontSize: \"30px\",\n      letterSpacing: \"2px\",\n      fontWeight: \"normal\",\n    },\n    addAPhoto : {\n        color: \"#0c0629\",\n        fontSize: \"40px\",\n    },\n  });\n\nconst Navbar = () => {\n    const classes = useStyles();\n    return (\n        \n        <Box component=\"nav\">\n            <AppBar style={{background: \"#fff\"}}>\n                <Toolbar>\n                    <AddAPhoto className={classes.addAPhoto}/>\n                    <Typography className={classes.h1Style} color=\"primary\"> Fotogalleri</Typography>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Navbar from './comps/Navbar';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm/>\n      <ImageGrid />\n      <Navbar />\n    </div>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[900],\n    },\n    secondary: {\n      main: lightGreen[300],\n    },\n  },\n});\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}