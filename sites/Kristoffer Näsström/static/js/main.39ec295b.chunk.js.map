{"version":3,"sources":["App.module.css","store/actions/actionTypes.tsx","components/Question/QuestionStyles.tsx","components/Question/Question.tsx","fetch.ts","store/actions/quizActions.tsx","components/ErrorHandler/withErrorHandler.tsx","models/AnswerModel.ts","containers/Questions/Questions.tsx","models/GameDetailsModel.ts","components/Form/FormStyles.tsx","components/Form/Form.tsx","containers/Start/Start.tsx","components/Score/Score.tsx","App.js","models/QuestionModel.ts","store/reducers/quizReducer.tsx","index.js"],"names":["module","exports","Actions","classesCommon","makeStyles","theme","createStyles","root","width","margin","list","itemRoot","opacity","backgroundColor","correct","incorrect","listItemIconHidden","display","listItemIconShow","iconCorrect","color","iconIncorrect","innerDiv","disabled","classesMobile","classesLandscape","justifyContent","Question","category","question","options","goToNextQuestion","gameActive","correctAnswer","countDown","useTheme","matches","useMediaQuery","breakpoints","up","commonClasses","mobileClasses","mobileClassesLandscape","classes","window","matchMedia","answersList","map","answer","ListItem","key","onClick","e","divider","selected","button","ListItemText","primary","ListItemIcon","className","Typography","variant","List","component","aria-label","BASE_URL","details","a","query","questions","difficulty","fetch","response","json","body","Component","fetchQuiz","gameDetails","dispatch","type","QUIZ_FETCH_START","quizFetch","then","data","quizArray","results","QUIZ_FETCH_DONE","payload","catch","err","QUIZ_FETCH_ERROR","AnswerModel","this","useStyles","backdrop","zIndex","drawer","connect","state","currentQuiz","loading","error","increaseScore","QUIZ_SCORE_INCREASE","quizEnded","QUIZ_ENDED","logAnswer","QUIZ_ANSWER_LOG","useState","questionIndex","setQuestionIndex","setgameActive","setCountDown","history","useHistory","useEffect","interval","setInterval","oldState","clearInterval","currentQuestion","hasScored","answerToLog","nextIndex","setTimeout","length","push","replace","toShow","CircularProgress","nextQuestion","removeError","QUIZ_FETCH_ERROR_CONFIRM","props","show","setShow","Fragment","Backdrop","open","GameDetailsModel","inputRoot","marginTop","setQuestions","diffValue","setDiffValue","mobileCLasses","FormControl","FormLabel","htmlFor","Input","id","placeholder","value","required","autoFocus","onChange","target","RadioGroup","name","FormControlLabel","control","Radio","label","Button","size","title","Start","styles","score","answers","displayAnswers","App","css","AppHeader","exact","path","Questions","Score","rawQuestion","formattedQuestion","formatQuestion","arrayShuffle","incorrect_answers","correct_answer","wrongAnswers","newArray","i","j","Math","floor","random","temp","formatHelper","q","input","txt","document","createElement","innerHTML","initialState","formatQuestions","reducer","action","concat","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","quizReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.39ec295b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__trR-O\",\"App-logo\":\"App_App-logo__1DnVa\",\"App-logo-spin\":\"App_App-logo-spin__3kvfb\",\"AppHeader\":\"App_AppHeader__3Zulg\",\"App-link\":\"App_App-link__wB16s\"};","enum Actions{\n    QUIZ_FETCH_START = \"QUIZ_FETCH_START\",\n    QUIZ_FETCH_DONE = \"QUIZ_FETCH_DONE\",\n    QUIZ_FETCH_ERROR = \"QUIZ_FETCH_ERROR\",\n    QUIZ_FETCH_ERROR_CONFIRM = \"QUIZ_FETCH_ERROR_CONFIRM\",\n\n    QUIZ_SCORE_INCREASE = \"QUIZ_SCORE_INCREASE\",\n    QUIZ_ENDED = \"QUIZ_ENDED\",\n\n    QUIZ_ANSWER_LOG = \"QUIZ_ANSWER_LOG\"\n}\n\nexport interface ActionModel{\n    type: Actions,\n    payload?: any\n}\n\nexport default Actions","import { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\n\n\nexport const classesCommon = makeStyles((theme:Theme) => \n  createStyles({\n    root:{\n      width:'90%',\n      margin: 'auto'\n    },\n    list:{\n      width:'50%',\n      margin: 'auto'\n    }\n    ,\n    itemRoot: {\n      '&$disabled': {\n        opacity: 1\n      },\n      '&:hover' :{\n        backgroundColor : '#eee !important'\n      }\n    },\n    correct: {\n      backgroundColor: \"#2ECC40\",\n  \n    },\n    incorrect: {\n      backgroundColor: \"#FF4136\",\n  \n    },\n    listItemIconHidden:{\n      display: 'none'\n    },\n    listItemIconShow:{\n      display: 'block'\n    }\n    ,\n    iconCorrect:{\n      color: \"#2ECC40\"\n    },\n    iconIncorrect:{\n      color: \"#FF4136\"\n    },\n    innerDiv:{},\n    disabled: {}\n    \n  })\n)\n\nexport const classesMobile = makeStyles((theme: Theme) =>\n  createStyles({\n    root:{\n      margin: 'auto',\n    },\n    list:{\n      width:'100%',\n      margin: 'auto'\n    },\n    innerDiv:{},\n    \n  })\n);\n\nexport const classesLandscape = makeStyles((theme: Theme) =>\n  createStyles({\n    root:{\n      margin: 'auto',\n      display: 'flex',\n      justifyContent: 'space-even'\n    },\n    innerDiv:{width:'50%',\n  margin: '2rem'},\n    \n  })\n);","import React, { FunctionComponent, MouseEvent } from \"react\";\nimport { List, ListItem, ListItemText, ListItemIcon, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  classesCommon,\n  classesMobile,\n  classesLandscape,\n} from \"./QuestionStyles\";\n\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\ntype QuestionProps = {\n  category: string;\n  question: string;\n  options: string[];\n  goToNextQuestion: Function;\n  gameActive: boolean;\n  correctAnswer: string;\n  countDown: number;\n};\n\nconst Question: FunctionComponent<QuestionProps> = ({\n  category,\n  question,\n  options,\n  goToNextQuestion,\n  gameActive,\n  correctAnswer,\n  countDown,\n}) => {\n  const theme = useTheme();\n\n  //checks if screen is larger than md which is 960px\n  const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const commonClasses = classesCommon();\n  const mobileClasses = classesMobile();\n  const mobileClassesLandscape = classesLandscape();\n  let classes = commonClasses;\n  if (!matches) {\n    classes = { ...commonClasses, ...mobileClasses };\n  }\n\n  //checks if window is in landscape mode, if yes then applies landscape css\n  if (window.matchMedia(\"(orientation: landscape)\").matches && !matches) {\n    classes = { ...classes, ...mobileClassesLandscape };\n  }\n\n  const answersList = options.map((answer) => {\n    return (\n      <ListItem\n        key={answer}\n        onClick={(e: MouseEvent) => goToNextQuestion(answer)}\n        divider\n        disabled={!gameActive}\n        selected={gameActive}\n        button\n        classes={{\n          root: classes.itemRoot,\n          disabled: classes.disabled, // class name, e.g. `root-x`\n        }}>\n        <ListItemText primary={answer} />\n        <ListItemIcon\n          classes={{\n            root: gameActive\n              ? classes.listItemIconHidden\n              : classes.listItemIconShow,\n          }}>\n          {answer === correctAnswer ? (\n            <CheckIcon classes={{ root: classes.iconCorrect }}></CheckIcon>\n          ) : (\n            <CloseIcon classes={{ root: classes.iconIncorrect }} />\n          )}\n        </ListItemIcon>\n      </ListItem>\n    );\n  });\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.innerDiv}>\n        <Typography variant=\"h3\">{category}</Typography>\n        <Typography variant=\"h5\">{question}</Typography>\n      </div>\n      <div className={classes.innerDiv}>\n        <List component=\"nav\" aria-label=\"\" className={classes.list}>\n          {answersList}\n        </List>\n        <p>Tid kvar: {countDown}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Question;\n","import GameDetailsModel from './models/GameDetailsModel'\n\nconst BASE_URL = `https://opentdb.com/api.php?amount=`;\n\n\nexport default async function http<T>(details: GameDetailsModel): Promise<any> {\n  try{\n    const query = `${BASE_URL}${details.questions}&difficulty=${details.difficulty}`;\n    const response = await fetch(query);\n    const body = await response.json();\n    return body;\n  }catch(err){\n    return err;\n  }\n\n}\n","import Actions, { ActionModel } from \"./actionTypes\";\nimport quizFetch from \"../../fetch\";\nimport GameDetailsModel from \"../../models/GameDetailsModel\";\nimport RawQuestionModel from \"../../models/RawQuestionModel\";\nimport AnswerModel from \"../../models/AnswerModel\";\n\nconst fetchQuizStart = (): ActionModel => ({\n  type: Actions.QUIZ_FETCH_START,\n});\n\nconst fetchQuizError = (): ActionModel => ({\n  type: Actions.QUIZ_FETCH_ERROR,\n});\n\nexport const fetchQuizErrorConfirm = (): ActionModel => ({\n  type: Actions.QUIZ_FETCH_ERROR_CONFIRM,\n});\n\nconst fetchQuizDone = (quizArray: RawQuestionModel[]): ActionModel => ({\n  type: Actions.QUIZ_FETCH_DONE,\n  payload: quizArray,\n});\n\nexport const fetchQuiz = (gameDetails: GameDetailsModel) => {\n  return (dispatch: any) => {\n    dispatch(fetchQuizStart());\n\n    quizFetch<RawQuestionModel[]>(gameDetails)\n      .then((data) => dispatch(fetchQuizDone(data.results)))\n      .catch((err) => dispatch(fetchQuizError()));\n  };\n};\n\nexport const increaseScore = (): ActionModel => ({\n    type: Actions.QUIZ_SCORE_INCREASE\n})\n\nexport const quizEnded = (): ActionModel => ({\n    type: Actions.QUIZ_ENDED\n})\n\nexport const logAnswer = (answer: AnswerModel): ActionModel => ({\n  type: Actions.QUIZ_ANSWER_LOG,\n  payload: answer\n})\n","import React, { FunctionComponent, useState } from \"react\";\nimport { Backdrop } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { fetchQuizErrorConfirm } from \"../../store/actions/quizActions\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\",\n    },\n  })\n);\n\ninterface ErrorHandlerProps {\n  Component: any;\n  error: string | null;\n  removeError: Function;\n}\n\n//higher order component, renders Component if there are no errors, otherwise backdrop with error message\nexport const withErrorHandler = (Component: any) => {\n  const ErrorHandler: FunctionComponent<ErrorHandlerProps> = (props) => {\n    const [show, setShow] = useState(false);\n    const history = useHistory();\n    const confirmError = () => {\n      setShow(() => {\n        props.removeError();\n        return false;\n      });\n      history.replace(\"/\");\n    };\n    const classes = useStyles();\n\n    if (props.error && !show) {\n      setShow(true);\n    }\n\n    return (\n      <React.Fragment>\n        <Backdrop\n          open={show}\n          className={classes.backdrop}\n          onClick={confirmError}>\n          <p>Kan inte ladda frågorna, kolla din internetuppkoppling</p>\n        </Backdrop>\n        <Component {...props}></Component>\n      </React.Fragment>\n    );\n  };\n\n  const mapDispatchToProps = (dispatch: any) => ({\n    removeError: () => dispatch(fetchQuizErrorConfirm()),\n  });\n  const mapStateToProps = (state: any) => ({ error: state.error });\n\n  return connect(mapStateToProps, mapDispatchToProps)(ErrorHandler);\n};\n","export default class AnswerModel{\n    readonly correct: boolean;\n    readonly question: string;\n\n    constructor(correct: boolean, question: string){\n        this.correct = correct;\n        this.question = question;\n    }\n}","import React, { FunctionComponent, useEffect, useState } from \"react\";\nimport Question from \"../../components/Question/Question\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport {\n  increaseScore,\n  quizEnded,\n  logAnswer,\n} from \"../../store/actions/quizActions\";\n\nimport QuestionModel from \"../../models/QuestionModel\";\nimport AnswerModel from \"../../models/AnswerModel\";\nimport { withErrorHandler } from \"../../components/ErrorHandler/withErrorHandler\";\n\nexport interface QuestionsProps {\n  questions: QuestionModel[];\n  loading: boolean;\n  increaseScore: Function;\n  quizEnded: Function;\n  logAnswer: Function;\n  error: string | null;\n}\n\nconst Questions: FunctionComponent<QuestionsProps> = ({\n  questions,\n  loading,\n  increaseScore,\n  quizEnded,\n  logAnswer,\n  error,\n}) => {\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [gameActive, setgameActive] = useState(true);\n  const [countDown, setCountDown] = useState<number>(10);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!error) {\n      //creates an interval to reduce countDown\n      if (gameActive && countDown > 0) {\n        const interval = setInterval(() => {\n          setCountDown((oldState) => oldState - 1);\n        }, 1000);\n        return () => clearInterval(interval);\n      }\n      //if game is active and coundown 0 or lower than force the game to next question\n      else if (gameActive && countDown <= 0) {\n        goToNextQuestion(\"\");\n      }\n    }\n  });\n\n  //setTimeout is so correct and wrong answers are displayed 1500 ms before next question\n  const goToNextQuestion = (answer: string) => {\n    setgameActive(false);\n    const currentQuestion = questions[questionIndex];\n    const hasScored = answer === currentQuestion.correctAnswer;\n    if (hasScored) {\n      increaseScore();\n    }\n    const answerToLog = new AnswerModel(hasScored, currentQuestion.question);\n    logAnswer(answerToLog);\n\n    const nextIndex = questionIndex + 1;\n    setTimeout(() => {\n      if (nextIndex < questions.length) {\n        setCountDown(() => {\n          setQuestionIndex(questionIndex + 1);\n          setgameActive(true);\n          return 10;\n        });\n      } else {\n        quizEnded();\n        history.push(\"/score\");\n      }\n    }, 1500);\n  };\n\n  //if API isn't loading and there are no questions then redirect to root\n  /*\n   */\n  const pushToRoot = !loading && !questions && !error;\n  if (pushToRoot) {\n    history.replace(\"/\");\n  }\n\n  let toShow = error ? (\n    <p>Kan inte ladda frågor</p>\n  ) : (\n    <CircularProgress color=\"secondary\"></CircularProgress>\n  );\n\n  if (!loading && questions) {\n    const nextQuestion = questions[questionIndex];\n    toShow = (\n      <Question\n        category={nextQuestion.category}\n        question={nextQuestion.question}\n        options={nextQuestion.options}\n        goToNextQuestion={goToNextQuestion}\n        correctAnswer={nextQuestion.correctAnswer}\n        gameActive={gameActive}\n        countDown={countDown}></Question>\n    );\n  }\n\n  return <div>{toShow}</div>;\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  increaseScore: () => dispatch(increaseScore()),\n  quizEnded: () => dispatch(quizEnded()),\n  logAnswer: (answer: AnswerModel) => dispatch(logAnswer(answer)),\n});\n\nconst mapStateToProps = (state: any) => ({\n  questions: state.currentQuiz,\n  loading: state.loading,\n  error: state.error,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Questions));\n","export default class GameDetailsModel {\n    questions: number;\n    difficulty: string;\n    constructor(questions: number, difficulty: string) {\n      this.questions = questions;\n      this.difficulty = difficulty;\n    }\n  }","import { Theme, makeStyles } from \"@material-ui/core/styles\";\n\nexport const classesCommon = makeStyles((theme: Theme) => ({\n  root: { width: \"100%\" },\n  inputRoot: {\n    marginTop: \"2rem\",\n  },\n}));\nexport const classesMobile = makeStyles((theme: Theme) => ({\n  root: {},\n}));\n","import React, { FunctionComponent, useState } from \"react\";\n\nimport {\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Input,\n  RadioGroup,\n  Radio,\n  Button,\n  useMediaQuery,\n} from \"@material-ui/core\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { fetchQuiz } from \"../../store/actions/quizActions\";\nimport { connect } from \"react-redux\";\nimport GameDetailsModel from \"../../models/GameDetailsModel\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { classesCommon, classesMobile } from \"./FormStyles\";\n\ninterface FormProps {\n  fetchQuiz: Function;\n}\n\nconst Form: FunctionComponent<FormProps> = ({ fetchQuiz }) => {\n  const [questions, setQuestions] = useState<number>(8);\n  const [diffValue, setDiffValue] = useState(\"medium\");\n\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  const commonClasses = classesCommon();\n  const mobileCLasses = classesMobile();\n  let classes = commonClasses;\n  if (!matches) {\n    classes = { ...classes, ...mobileCLasses };\n  }\n\n  const history = useHistory();\n  const handleClick = () => {\n    const gameDetails = new GameDetailsModel(questions, diffValue);\n    fetchQuiz(gameDetails);\n    history.push(\"/quiz\");\n  };\n\n  return (\n    <FormControl\n      margin=\"normal\"\n      variant=\"outlined\"\n      classes={{ root: classes.root }}>\n      <FormLabel color=\"secondary\" htmlFor=\"input\">\n        Antal Frågor:{\" \"}\n      </FormLabel>\n      <Input\n        id=\"input\"\n        type=\"number\"\n        placeholder=\"8\"\n        value={questions === 0 ? \"\" : questions}\n        color=\"secondary\"\n        required\n        autoFocus\n        onChange={(e) => setQuestions(+e.target.value)}></Input>\n      <FormLabel\n        color=\"secondary\"\n        htmlFor=\"radio\"\n        classes={{ root: classes.inputRoot }}>\n        Svårighetsgrad\n      </FormLabel>\n      <RadioGroup\n        id=\"radio\"\n        aria-label=\"difficulty\"\n        name=\"difficulty\"\n        value={diffValue}\n        onChange={(e) => setDiffValue(e.target.value)}>\n        <FormControlLabel value=\"easy\" control={<Radio />} label=\"Lätt\" />\n        <FormControlLabel value=\"medium\" control={<Radio />} label=\"Mellan\" />\n        <FormControlLabel value=\"hard\" control={<Radio />} label=\"Svårt\" />\n      </RadioGroup>\n      <Button\n        size=\"large\"\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={handleClick}\n        classes={{ root: classes.inputRoot }}>\n        Börja\n      </Button>\n    </FormControl>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  fetchQuiz: (gameDetails: GameDetailsModel) =>\n    dispatch(fetchQuiz(gameDetails)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React, { FunctionComponent } from \"react\";\nimport Form from \"../../components/Form/Form\";\nimport { Typography } from \"@material-ui/core\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\ninterface StartProps {}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    title: {\n      color:\"#f50057\"\n    },\n  })\n);\n\nconst Start: FunctionComponent<StartProps> = () => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Typography variant=\"h3\" className={classes.title}>\n        Kristoffers quiz\n      </Typography>\n      <Form></Form>\n    </div>\n  );\n};\n\nexport default Start;\n","import React, { FunctionComponent} from 'react';\nimport {connect} from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\nimport { List, ListItem, ListItemText, ListItemIcon, Typography } from \"@material-ui/core\";\nimport AnswersModel from '../../models/AnswerModel'\n\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { Theme, makeStyles } from \"@material-ui/core/styles\";\n\nconst styles = makeStyles((theme:Theme) => ({\n    correct:{\n        color:\"#2ECC40\"\n    },\n    incorrect:{\n        color: \"#FF4136\"\n    }\n}))\n\n\ninterface ScoreProps {\n    score: number,\n    quizEnded: boolean,\n    answers: AnswersModel[];\n}\n\nconst Score:FunctionComponent<ScoreProps> = ({score, quizEnded, answers}) => {\n\n    const history = useHistory();\n    const classes = styles();\n\n    if(!quizEnded){\n        history.push(\"/\")\n    }\n    const displayAnswers = answers.map(answer => {\n        return <ListItem divider key={answer.question}>\n            <ListItemText>{answer.question}: \n            <ListItemIcon>\n            {answer.correct ?\n             <CheckIcon classes={{root:classes.correct}}/> :\n              <CloseIcon classes={{root:classes.incorrect}}/>}\n            </ListItemIcon>\n            </ListItemText>\n        </ListItem>\n    })\n\n    return <div>\n        <List>\n            {displayAnswers}\n        </List>\n        <Typography variant=\"h6\">Dina poäng: {score}</Typography>\n        \n    </div>\n}\n\nconst mapStateToProps = (state: any) => ({\n    score: state.score,\n    quizEnded: state.quizEnded,\n    answers: state.answers\n})\n\nexport default connect(mapStateToProps)(Score);","import React from \"react\";\nimport css from \"./App.module.css\";\nimport Questions from \"./containers/Questions/Questions\";\nimport Start from \"./containers/Start/Start\";\nimport Score from \"./components/Score/Score\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\n\nfunction App() {\n\n  return (\n    <div className={css.App}>\n      <div className={css.AppHeader}>\n        <Switch>\n          <Route exact path=\"/\" component={Start}></Route>\n          <Route path=\"/quiz\" component={Questions}></Route>\n          <Route path=\"/score\" component={Score}></Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\n\n\nexport default App\n","import RawQuestionModel from './RawQuestionModel'\n\nexport default class Question {\n  readonly category: string;\n  readonly question: string;\n  readonly options: string[];\n  readonly correctAnswer: string;\n\n  // constructor(\n  //   category: string,\n  //   question: string,\n  //   correctAnswer: string,\n  //   incorrectAnswers: string[]\n  // ) {\n  //   this.category = category;\n  //   this.question = question;\n  //   this.options = arrayShuffle(incorrectAnswers, correctAnswer);\n  //   this.correctAnswer = correctAnswer;\n  // }\n\n  constructor(rawQuestion: RawQuestionModel){\n    const formattedQuestion = formatQuestion(rawQuestion)\n    this.category = formattedQuestion.category;\n    this.question = formattedQuestion.question;\n    this.options = arrayShuffle(formattedQuestion.incorrect_answers, formattedQuestion.correct_answer);\n    this.correctAnswer = formattedQuestion.correct_answer;\n\n  }\n}\n\n//Durstenfeld shuffle\nconst arrayShuffle = (\n  wrongAnswers: string[],\n  correctAnswer: string\n): string[] => {\n  const newArray = [...wrongAnswers, correctAnswer];\n  for (let i = newArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = newArray[i];\n    newArray[i] = newArray[j];\n    newArray[j] = temp;\n  }\n  return newArray;\n};\n\nconst formatQuestion = (question: RawQuestionModel): RawQuestionModel => {\n  question.question = formatHelper(question.question);\n  question.incorrect_answers = question.incorrect_answers.map(q => formatHelper(q))\n  question.correct_answer = formatHelper(question.correct_answer)\n  return question\n};\n\nconst formatHelper = (input: string): string => {\n  const txt = document.createElement(\"textarea\");\n  txt.innerHTML = input;\n  return txt.value;\n}\n","import Actions, { ActionModel } from \"../actions/actionTypes\";\nimport RawQuestionModel from \"../../models/RawQuestionModel\";\nimport Question from \"../../models/QuestionModel\";\nimport AnswerModel from \"../../models/AnswerModel\";\n\ninterface InitalState {\n  currentQuiz: Question[] | null,\n  loading: boolean,\n  score: number,\n  quizEnded: boolean,\n  answers: AnswerModel[],\n  error: string | null\n}\n\nconst initialState : InitalState = {\n  currentQuiz: null,\n  loading: false,\n  score: 0,\n  quizEnded: false,\n  answers: [],\n  error: null\n};\n\n\n//convert api data to my own model\nconst formatQuestions = (questions: RawQuestionModel[]): Question[] => {\n  return questions.map(question => new Question(question))\n};\n\nconst reducer = (state = initialState, action: ActionModel) => {\n  switch (action.type) {\n    case Actions.QUIZ_FETCH_DONE:\n      return {\n        ...state,\n        currentQuiz: formatQuestions(action.payload),\n        loading: false,\n      };\n    case Actions.QUIZ_FETCH_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case Actions.QUIZ_FETCH_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: \"Kunde inte hämta frågorna, kolla din internetuppkoppling\"\n      };\n\n      case Actions.QUIZ_FETCH_ERROR_CONFIRM:\n        return{\n        ...state,\n        error: null\n      }\n\n    case Actions.QUIZ_SCORE_INCREASE:\n      return {\n        ...state,\n        score: state.score + 1,\n      };\n\n    case Actions.QUIZ_ENDED:\n      return {\n        ...state,\n        quizEnded: true,\n      };\n\n      case Actions.QUIZ_ANSWER_LOG:\n        return {\n          ...state,\n          answers: state.answers.concat(action.payload)\n        }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose} from 'redux'\n\nimport thunk from 'redux-thunk'\n\nimport quizReducer from './store/reducers/quizReducer'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n\nconst store = createStore(quizReducer, composeEnhancers(applyMiddleware(thunk)))\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}