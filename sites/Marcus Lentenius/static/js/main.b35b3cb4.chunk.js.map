{"version":3,"sources":["scripts/firebase.js","scripts/idGenerator.js","scripts/firebaseCRUD.js","scripts/formatText.js","scripts/categorizeItems.js","components/shared/style/Input.jsx","scripts/todoistCRUD.js","components/shared/DataLoader.jsx","components/shared/style/Button.jsx","components/list/AddItem.jsx","components/list/style/CheckBox.jsx","components/shared/style/Row.jsx","components/shared/style/Text.jsx","components/list/Item.jsx","components/list/Category.jsx","components/Drawer.jsx","components/list/List.jsx","components/newItems/style/Select.jsx","components/newItems/NewItemOptions.jsx","components/newItems/NewItems.jsx","components/recipes/Recipe.jsx","components/recipes/AddIngredient.jsx","components/recipes/Ingredient.jsx","components/recipes/AddRecipe.jsx","components/recipes/Recipes.jsx","index.js","components/App.jsx"],"names":["fireBase","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fireStore","getId","Math","round","random","Delete","item","path","a","collection","doc","update","items","FieldValue","arrayRemove","catch","e","console","error","DeleteRecipe","recipe","recipes","Create","name","category","amount","id","log","JSON","stringify","map","existingItem","toLowerCase","arrayUnion","CreateRecipe","CreateNewItem","AddItemToReferenceList","Read","storeDocument","Promise","resolve","onSnapshot","snapshot","data","caseString","str","slice","toUpperCase","length","CategorizeItem","referenceList","cat","exists","Object","values","forEach","listOfItems","value","index","entries","includes","Input","styled","input","props","addItem","addAmount","recipeName","ingredient","ingredientAmount","$","require","apiUrl","token","TodoistRead","ajax","url","type","dataType","success","response","sync_token","project_id","push","sort","b","child_order","LoadItems","React","createContext","Loader","useState","isAuthenticated","setAuthenticated","isLoaded","setIsLoaded","setItems","setReferenceList","sortingOrder","setSortingOrder","newItems","setNewItems","setRecipes","useEffect","auth","signInWithEmailAndPassword","then","fetchData","fetchSortOrder","fetchReferenceList","fetchItems","fetchNewItems","fetchRecipes","updateData","group","coop","importFromTodoist","todoistList","content","newItem","state","reference_list","sorting_order","new_items","bind","Provider","children","base","drawer","Button","div","decreaseAmount","increaseAmount","rightAligned","leftDrawer","rightDrawer","AddItem","Data","useContext","setAmount","useRef","handleSubmit","current","focus","Grid","container","style","marginTop","position","bottom","xs","ref","onKeyPress","key","onClick","preventDefault","stopPropagation","variant","disableElevation","size","CheckBox","Row","groceryList","recipeIngredient","Text","p","categoryHeadline","recipeHeadline","routerLink","groceryListHeadline","inline","Item","Category","showList","setShowList","handleClick","List","filter","Drawer","anchor","disableClickToClose","left","right","setState","toggleDrawer","open","event","Fragment","AppBar","zIndex","height","boxShadow","padding","backgroundColor","borderBottom","SwipeableDrawer","onClose","onOpen","paddingTop","link","Divider","role","onKeyDown","Content","Set","indexOf","DrawerContent","marginBottom","textAlign","width","top","Select","select","NewItemOptions","keys","NewItems","onChange","target","handleUpdate","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","Recipe","expanded","setExpanded","classes","Card","CardHeader","action","CardActions","disableSpacing","IconButton","className","clsx","aria-expanded","aria-label","title","Collapse","in","timeout","unmountOnExit","CardContent","ingredients","handleOnClick","parentNode","remove","AddIngredient","ingredientRef","amountRef","handleAddIngredient","placeholder","Ingredient","thisIngredient","setIngredients","isUpdateable","setUpdatable","updateItem","defaultValue","n","handleIncreaseAmount","arr","handleDeleteIngredient","AddRecipe","nameRef","reg","RegExp","test","parseInt","Recipes","setOpen","handleClickOpen","handleClose","recipeToDelete","Box","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogActions","handleDelete","autoFocus","m","routing","Container","component","drawerContent","to","textDecoration","Redirect","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b35b3cb4.chunk.js","sourcesContent":["import * as firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyB0YegQaogUwWG2aHi6YXmRhawpoB6yqio',\n    authDomain: 'lent-grocery-list.firebaseapp.com',\n    databaseURL: 'https://lent-grocery-list.firebaseio.com',\n    projectId: 'lent-grocery-list',\n    storageBucket: 'lent-grocery-list.appspot.com',\n    messagingSenderId: '679079840406',\n    appId: '1:679079840406:web:773d73899b9adb82e450b7',\n    measurementId: 'G-J9ZY2G1470'\n}\n\nexport const fireBase = firebase.initializeApp(firebaseConfig)\n\nexport const fireStore = firebase.firestore()","export const getId = () => {\n    return Math.round(Math.random() * (99999999 - 11111111) + 11111111);\n}","import {fireStore} from \"./firebase\";\nimport * as firebase from \"firebase\";\nimport {getId} from \"./idGenerator\";\n\nexport const Delete = async (item, path) => {\n    return fireStore.collection('grocery_list').doc(path).update({\n        items: firebase.firestore.FieldValue.arrayRemove(item)\n    }).catch((e) => console.error('delete error: ', e));\n}\n\nexport const DeleteRecipe = async (recipe) => {\n    return fireStore.collection('grocery_list').doc('recipes').update({\n        recipes: firebase.firestore.FieldValue.arrayRemove(recipe)\n    }).catch((e) => console.error('delete error: ', e));\n}\n\n//todo ta bort array? param items\nexport const Create = async (items,\n                             {\n                                 name,\n                                 category = '',\n                                 amount = 1\n                             }) => {\n\n    const item = {\n        name: name,\n        category: category,\n        amount: amount,\n        id: getId()\n    }\n\n    console.log('Creating item ' + JSON.stringify(item));\n\n    if (items) {\n        items.map(existingItem => {\n            if (existingItem.name.toLowerCase() === name.toLowerCase()) {\n                item.amount += existingItem.amount\n                Delete(existingItem, 'items')\n            }\n        });\n    }\n\n    return fireStore.collection('grocery_list').doc('items').update({\n        items: firebase.firestore.FieldValue.arrayUnion(item)\n    }).catch((e) => console.error('write error: ', e));\n};\n\nexport const CreateRecipe = async (recipe) => {\n    return fireStore.collection('grocery_list').doc('recipes').update({\n        recipes: firebase.firestore.FieldValue.arrayUnion(recipe)\n    }).catch((e) => console.error('write error: ', e));\n};\n\nexport const CreateNewItem = async (name) => {\n    return fireStore.collection('grocery_list').doc('new_items').update({\n        items: firebase.firestore.FieldValue.arrayUnion(name)\n    }).catch((e) => console.error('write error: ', e));\n};\n\nexport const AddItemToReferenceList = async (name, category) => {\n    return fireStore.collection('grocery_list').doc('reference_list').update({\n        [category]: firebase.firestore.FieldValue.arrayUnion(name)\n    }).catch((e) => console.error('write error: ', e));\n};\n\nexport async function Read(storeDocument) {\n    return new Promise(function (resolve) {\n        fireStore.collection('grocery_list').doc(storeDocument).onSnapshot(snapshot => {\n            resolve(snapshot.data());\n        });\n    })\n}","export function caseString(str) {\n    str = str.slice(0, 1)\n            .toUpperCase() +\n        str.slice(1, str.length)\n            .toLowerCase();\n    return str;\n}","//todo name convention?\nimport {caseString} from \"./formatText\";\nimport {CreateNewItem} from \"./firebaseCRUD\";\n\n/**\n * Cross references the item name with a list of categories and updates category prop of item\n\n * @param name\n * @param referenceList\n * @returns {string}\n * @constructor\n */\n\nexport const CategorizeItem = (name, referenceList) => {\n    let cat = '';\n    let exists = false\n\n    Object.values(referenceList).forEach(listOfItems => {\n        listOfItems.map((value, index) => {\n            listOfItems[index] = value.toLowerCase();\n        });\n    });\n\n    Object.entries(referenceList).forEach(category => {\n        if (category[1].includes(name.toLowerCase())) {\n            cat = caseString(category[0]);\n            exists = true\n        }\n    })\n\n//todo check up on this\n    if (!exists) {\n        CreateNewItem(name)\n    }\n\n    return cat;\n}","import styled from \"@emotion/styled\";\n\nconst addItem = `\n    background-color: #ffffff;\n    color: #858585;\n    border-radius: .25rem;\n    border: 1px solid #ababab;\n    height: 30px;\n    padding: 0 15px;\nwidth: calc(100% - 30px);\n`\n\nconst addAmount = ` \n    width: 25px;\n    box-sizing:border-box;\n    background-color: #ffffff;\n    color: #858585;\n    border: 1px solid #ababab;\n    height: 32px;\n    text-align: center;\n    padding: 0 3px;\n`\nconst recipeName = `\nwidth: calc(100% - 30px);\n    background-color: #ffffff;\n    color: #858585;\n    border-radius: .25rem;\n    border: 1px solid #ababab;\n    height: 30px;\n    padding: 0 15px;\n`\nconst ingredient = `\nwidth: calc(100% - 30px);\n    background-color: #ffffff;\n    color: #858585;\n    border-radius: .25rem;\n    border: 1px solid #ababab;\n    height: 30px;\n    padding: 0 15px;\n`\nconst ingredientAmount = `\n    width: 40px;\n    background-color: #ffffff;\n    color: #858585;\n    border-radius: .25rem;\n    border: 1px solid #ababab;\n    height: 30px;\n    padding: 0 15px;\n`\n\nexport const Input = styled.input`\n    ${props =>\n    props.addItem ? addItem : '' ||\n    props.addAmount ? addAmount : '' ||\n    props.recipeName ? recipeName : '' ||\n    props.ingredient ? ingredient : '' ||\n    props.ingredientAmount ? ingredientAmount : ''}\n`","const $ = require( \"jquery\" );\n\nconst apiUrl = 'https://api.todoist.com/sync/v8/sync';\nconst token = \"a20db3a3e7de819db9fc1b3878cb2b5d606f0a17\";\nlet syncToken;\n\n/** Connection to a grocery list in Todoist\n *  Imports items from that list and adds it to this list\n *\n * @returns {Promise<[]>} Returns array of items from Todoist\n */\n\nexport async function TodoistRead() {\n    const items = []\n    const resourceType = 'items';\n\n    let data = {\n        \"token\": token,\n        'resource_types': '[\"' + resourceType + '\"]'\n    };\n\n    await $.ajax({\n        url: apiUrl,\n        data: data,\n        type: 'POST',\n        dataType: 'json',\n        success: function (response) {\n            syncToken = response.sync_token;\n            response.items.forEach(item => {\n                if (item.project_id === 2228491362) {\n                    items.push(item);\n                }\n            })\n            // items = response.items;\n            //todo flytta ut d\n            items.sort((a, b) => (a.child_order > b.child_order) ? 1 : -1);\n            return response;\n        }\n    });\n    return items;\n}","import React, {useEffect, useState} from \"react\";\nimport {Create, Read} from \"../../scripts/firebaseCRUD\";\nimport {fireBase} from \"../../scripts/firebase\";\nimport {TodoistRead} from \"../../scripts/todoistCRUD\";\nimport {CategorizeItem} from \"../../scripts/categorizeItems\";\nimport {caseString} from \"../../scripts/formatText\";\nimport {scryRenderedComponentsWithType} from \"react-dom/test-utils\";\n\nexport const LoadItems = React.createContext(null);\n\nexport const Loader = props => {\n    const [isAuthenticated, setAuthenticated] = useState(false)\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const [items, setItems] = useState(null);\n    const [referenceList, setReferenceList] = useState(null)\n    const [sortingOrder, setSortingOrder] = useState(null)\n    const [newItems, setNewItems] = useState(null)\n    const [recipes, setRecipes] = useState(null)\n\n    useEffect(()=>{\n        if (!isAuthenticated) {\n            fireBase.auth().signInWithEmailAndPassword('marcus@lentenius.se', 'password')\n                .then(success => {\n                    setAuthenticated(true);\n                    console.log('authenticated')\n                })\n                .catch((e) => console.error(e));\n        }\n    },[isAuthenticated])\n\n    useEffect(() => {\n        console.log('fetch?')\n        if (!isLoaded && isAuthenticated) {\n            fetchData()\n        }\n    }, [isLoaded, isAuthenticated])\n\n    //todo reorder after need\n    const fetchData = async () => {\n        console.log('Preload initiated...')\n        await fetchSortOrder();\n        await fetchReferenceList();\n        await fetchItems();\n        await fetchNewItems()\n        await fetchRecipes()\n        setIsLoaded(true);\n        console.log('Preload complete')\n    }\n\n    const updateData = async (group) => {\n        //todo enums?\n        switch (group) {\n            case 'newItems':\n                fetchNewItems();\n                break;\n            case 'items':\n                fetchItems();\n                break;\n        }\n    }\n\n    const fetchItems = async () => {\n        console.log('Fetching items...')\n        const response = await Read('items');\n        setItems(response.items);\n        console.log('Items fetched')\n    }\n    const fetchRecipes = async () => {\n        console.log('Fetching recipes...')\n        const response = await Read('recipes');\n        setRecipes(response.recipes)\n        console.log('Recipes fetched')\n    }\n\n    const fetchReferenceList = async () => {\n        console.log('Fetching Reference list...')\n        const response = await Read('reference_list');\n        setReferenceList(response)\n        console.log('Reference list fetched')\n    }\n\n    const fetchSortOrder = async () => {\n        console.log('Fetching Sorting order...')\n        const response = await Read('sorting_order');\n        setSortingOrder(response.coop)\n        console.log('Sorting order fetched')\n    }\n    const fetchNewItems = async () => {\n        console.log('Fetching New items...')\n        const response = await Read('new_items');\n        setNewItems(response.items);\n        console.log('New items fetched')\n    }\n\n    // //todo refactor\n    const importFromTodoist = async () => {\n        const todoistList = await TodoistRead();\n        const arr = todoistList.map(item => {\n            return {name: item.content, category: CategorizeItem(item.content, referenceList)}\n        })\n\n        arr.forEach(newItem => {\n            let exists = false\n            items.forEach(item => {\n                if (item.name === newItem.name) {\n                    exists = true\n                }\n            })\n\n            if (exists === false) {\n                Create(items, {\n                    name: caseString(newItem.name),\n                    category: newItem.category,\n                }).catch((e) => console.error(e));\n            }\n            exists = false\n        })\n        await updateData('items')\n        await updateData('newItems')\n    }\n\n    const state = {\n        items: items,\n        //todo rename\n        reference_list: referenceList,\n        sorting_order: sortingOrder,\n        new_items: newItems,\n        recipes: recipes,\n        fetchItems: fetchItems.bind(this),\n        fetchReferenceList: fetchReferenceList.bind(this),\n        importFromTodoist: importFromTodoist.bind(this),\n        fetchRecipes: fetchRecipes.bind(this),\n        updateData: updateData.bind(this)\n    }\n\n    return (\n        <>\n            {isLoaded ? <LoadItems.Provider value={state}>\n                {props.children}\n            </LoadItems.Provider> : <p> loading </p>}\n        </>\n    );\n};\n","import styled from '@emotion/styled'\n\nconst decreaseAmount = `\nborder-right: 0;\nborder-top-right-radius: 0;\nborder-bottom-right-radius: 0;\n    `\nconst increaseAmount = `\nborder-left: 0;\nborder-top-left-radius: 0;\nborder-bottom-left-radius: 0;\n    `\n\n\nconst base = `\n    font: 400 13.3333px Arial;\n    cursor: pointer;\n    margin: 0;\n    display: inline-flex;\n    align-items: center;\n    vertical-align: middle;\n    justify-content: center;\n    color: rgba(0,0,0,0.87);\n    box-sizing: border-box;\n    letter-spacing: 0.02857em;\n    padding: 4px 10px;\n    border-radius: 10px;\n    border: 1px solid black;\n    height: 32px;\n`\n\nconst leftDrawer = `\n    border-right: 1px solid gray;\n    left: 0;\n`\nconst rightDrawer = `\n    border-left: 1px solid gray;\n    right: 0;\n`\n\nconst drawer = `\n    padding: 0 6px;\n    z-index: 1300;\n    width: fit-content;\n    color: black;\n    font-size: 18px;\n    display: inline-block;\n    position: fixed;\n    top: 7px;\n`\n\nconst rightAligned = `\n    right: 8px;\n    position: absolute;\n`\nexport const Button = styled.div`\n${props =>\n    props.decreaseAmount ? decreaseAmount + base :\n    props.increaseAmount ? increaseAmount + base :\n    props.rightAligned ? rightAligned + base :\n    props.leftDrawer ? leftDrawer + drawer :\n    props.rightDrawer ? rightDrawer + drawer :\n    props ? base : null\n}\n`\n","import React, {useContext, useRef, useState} from \"react\";\nimport {Create} from \"../../scripts/firebaseCRUD\";\nimport {CategorizeItem} from \"../../scripts/categorizeItems\";\nimport {caseString} from \"../../scripts/formatText\";\nimport {Input} from \"../shared/style/Input\";\nimport {LoadItems} from \"../shared/DataLoader\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Button} from \"../shared/style/Button\";\n\n/**\n * Section for form to add new items to the list\n */\n\nconst AddItem = () => {\n    const Data = useContext(LoadItems);\n    const [amount, setAmount] = useState(1)\n    const newItem = useRef(); // <input> add item\n\n    const handleSubmit = () => {\n        const item = newItem.current;\n\n        if (item.value !== '') {\n            let category = CategorizeItem(item.value, Data.reference_list)\n            Create(Data.items, {\n                name: caseString(item.value),\n                category: category,\n                amount: amount\n            }).catch((e) => console.error(e));\n\n            Data.updateData('items')\n            if (category === '') {\n                Data.updateData('newItems');\n            }\n        }\n\n        setAmount(1);\n        item.value = '';\n        item.focus()\n    }\n\n    const sticky = {\n        marginTop: \"20px\",\n        position: \"sticky\",\n        bottom: \"10px\",\n    }\n\n    return (\n        <Grid container style={sticky}>\n            <Grid item xs>\n                <Input addItem ref={newItem} onKeyPress={e => {\n                    if (e.key === \"Enter\") {\n                        handleSubmit()\n                    }\n                }}/>\n            </Grid>\n\n            <Grid item>\n                <Button decreaseAmount onClick={e => {\n                    newItem.current.focus();\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (amount > 1) {\n                        setAmount(amount - 1);\n                    }\n                }}>\n                    -\n                </Button>\n\n                <Input addAmount value={amount} name=\"amount\"/>\n\n                <Button increaseAmount onClick={e => {\n                    newItem.current.focus();\n                    e.preventDefault();\n                    e.stopPropagation();\n                    setAmount(amount + 1)\n                }}>\n                    +\n                </Button>\n                <Button variant={\"contained\"} disableElevation size=\"small\" onClick={() => handleSubmit()}>\n                    Add\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n\n\nexport default AddItem;\n\n\n","import styled from \"@emotion/styled\";\n\nexport const CheckBox = styled.div`\n    position: absolute;\n    top: 50%;\n    right: 0;\n    transform: translateY(-50%);\n    display: inline-block;\n    height: 20px;\n    width: 20px;\n    border-radius: 15px;\n    border: 1px solid #ababab;\n    background-color: white;\n    cursor: pointer;\n`","import styled from \"@emotion/styled\";\n\nconst groceryList = `\n    position: relative;\n    border-bottom: 1px solid #efeded;\n    display: flex;\n        margin-top: 10px;\n        text-align: right;\n`\nconst recipeIngredient = `\n    width: 300px;\n    align-items: center;\n    position: relative;\n    display: flex;\n    left: 50%;\n    transform: translateX(-50%);\n`\n\n\nexport const Row = styled.div`\n    width: 100%;\n    height: 32px;\n${props =>\n    props.groceryList ? groceryList : '' ||\n    props.recipeIngredient ? recipeIngredient : ''};\n`","import styled from \"@emotion/styled\";\nconst item = `\n    font-size: 22px;\n`\nconst categoryHeadline = `\n    cursor: pointer;\n    position: relative;\n    margin: 15px 0 5px 0;\n    font-size: 30px;\n`\nconst ingredient = `\nwidth: 100%;\n`\n\nconst recipeHeadline = `\nfont-size: 25px;\n`\n\nconst groceryListHeadline = `\nfont-size: 25px;\ntext-align: center;\nmargin: 20px;\n`\nconst routerLink = `\ncolor: black;\nfont-size: 25px;\ntext-decoration: none;\ntext-align: right;\nwhite-space: nowrap;\nmargin-left: 30px;\nmargin-right: 10px;\n`\n\nconst inline = `\ndisplay: inline-block;\nheight: 40px;\n\n    font-size: 22px;\n    position: relative;\n`\n\nexport const Text = styled.p`\nmargin: 0;\nfont-size: 14px;\nfont-family: Arial,serif;\n\n${props =>\n    props.item ? item : '' ||\n    props.categoryHeadline ? categoryHeadline : '' ||\n    props.ingredient ? ingredient : '' ||\n    props.recipeHeadline ? recipeHeadline : '' ||\n    props.routerLink ? routerLink : '' ||\n    props.groceryListHeadline ? groceryListHeadline :  '' ||\n    props.inline ? inline :  ''\n};\n`","import React, {useContext} from \"react\";\nimport {CheckBox} from \"./style/CheckBox\";\nimport {Row} from \"../shared/style/Row\";\nimport {Delete} from \"../../scripts/firebaseCRUD\";\nimport {Text} from \"../shared/style/Text\";\nimport {LoadItems} from \"../shared/DataLoader\";\nimport Radio from \"@material-ui/core/Radio\";\n\nconst Item = ({item}) => {\n    const Data = useContext(LoadItems);\n\n    return (\n        <Row groceryList>\n            <Text item>\n                {item.amount === 1 ? null : item.amount} {item.name}\n            </Text>\n            <CheckBox onClick={() => {\n                Delete(item, 'items')\n                Data.fetchItems()\n            }}/>\n        </Row>\n    )\n}\n\nexport default Item;","import React, {useContext, useState} from \"react\";\nimport Item from \"./Item\";\nimport {Text} from \"../shared/style/Text\";\nimport {getId} from \"../../scripts/idGenerator\";\nimport {LoadItems} from \"../shared/DataLoader\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {ExpandLess, ExpandMore} from \"@material-ui/icons\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\n/**\n * Groups all items under respective category and function for hiding/showing each category\n */\n\nconst Category = ({category}) => {\n    const Data = useContext(LoadItems);\n    const [showList, setShowList] = useState(true)\n\n    const handleClick = () => {\n        showList ? setShowList(false) : setShowList(true)\n    }\n\n    const List = () => (\n        <>\n            {\n                Data.items.filter(item => item.category === category).map(item => (\n                        <Item key={'category_' + item.name + getId()} item={item}/>\n                    )\n                )\n            }\n        </>\n    )\n\n    return (\n        <>\n            {category !== '' ? (\n                <Text categoryHeadline onClick={() => handleClick()}>\n                    {category}\n                </Text>\n            ) : (\n                <Text categoryHeadline onClick={() => handleClick()}>\n                    Okänd\n                </Text>\n            )}\n            {showList ? <List/> : null}\n        </>\n    )\n}\n\nexport default Category","import React from \"react\";\nimport {Button} from \"./shared/style/Button\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\n\n\nconst Drawer = ({anchor, content, disableClickToClose}) => {\n    const [state, setState] = React.useState({\n        left: false,\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setState({...state, [anchor]: open});\n    };\n\n    const Content = (anchor) => (\n        <>\n            {disableClickToClose ?\n                <>\n                    <List style={{paddingTop: \"60px\"}}>\n                        {content.map((link) => link)}\n                    </List>\n                    <Divider/>\n                </>\n                :\n                <div\n                    role=\"presentation\"\n                    onClick={toggleDrawer(anchor, false)}\n                    onKeyDown={toggleDrawer(anchor, false)}\n                >\n                    <List style={{paddingTop: \"60px\"}}>\n                        {content.map((link) => link)}\n                    </List>\n                    <Divider/>\n                </div>\n            }\n        </>\n    );\n\n    const appBar = {\n        zIndex: 1299,\n        height: \"40px\",\n        boxShadow: \"none\",\n        padding: \"8px\",\n        position: \"fixed\",\n        backgroundColor: \"white\",\n        borderBottom: \"1px solid gray\",\n    }\n\n    return (\n        <React.Fragment key={anchor}>\n            {anchor === 'left' ? <Button leftDrawer onClick={toggleDrawer(anchor, true)}>☰</Button> : null}\n            {anchor === 'right' ? <Button rightDrawer onClick={toggleDrawer(anchor, true)}>☰</Button> : null}\n            <AppBar position=\"fixed\" style={appBar}/>\n            <SwipeableDrawer\n                anchor={anchor}\n                open={state[anchor]}\n                onClose={toggleDrawer(anchor, false)}\n                onOpen={toggleDrawer(anchor, true)}\n            >\n                {anchor === 'left' ? <Button leftDrawer onClick={toggleDrawer(anchor, false)}>X</Button> : null}\n                {anchor === 'right' ? <Button rightDrawer onClick={toggleDrawer(anchor, false)}>X</Button> : null}\n                {Content(anchor)}\n            </SwipeableDrawer>\n        </React.Fragment>\n    )\n}\n\nexport default Drawer","import React, {useContext} from \"react\";\nimport AddItem from \"./AddItem\";\nimport Category from \"./Category\";\nimport {LoadItems} from \"../shared/DataLoader\";\nimport {caseString} from \"../../scripts/formatText\";\nimport {Text} from \"../shared/style/Text\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport {Button} from \"../shared/style/Button\";\nimport Drawer from \"../Drawer\";\n\n\nconst List = () => {\n    const Data = useContext(LoadItems);\n\n    const sortingOrder = Data.sorting_order.map(category => caseString(category))\n    let category = [...new Set(Data.items.map(item => item.category))];\n\n    if (sortingOrder) {\n        category.sort(function (a, b) {\n            return sortingOrder.indexOf(a) - sortingOrder.indexOf(b);\n        });\n    }\n\n    const appBarStyle = {\n        top: 'auto',\n        bottom: 0,\n        padding: \"0 16px 16px 16px\",\n        backgroundColor: \"white\"\n    }\n    const importStyle = {\n        marginBottom: \"80px\",\n        textAlign: \"center\",\n        width: \"100%\",\n        marginTop: \"40px\"\n    }\n\n    const DrawerContent = [\n        <Button variant={\"contained\"} disableElevation size=\"small\"  style={importStyle} onClick={() => {\n            Data.importFromTodoist()\n        }}>\n            Import from Todoist\n        </Button>\n    ]\n\n    return (\n        <>\n            <Drawer anchor={'right'} content={DrawerContent}/>\n\n            <Text groceryListHeadline>\n                Grocery list\n            </Text>\n            {\n                category.map(category => (\n                    <Category key={'list_' + category} category={category}/>\n                ))\n            }\n\n            <AppBar position=\"fixed\" style={appBarStyle}>\n                <AddItem/>\n            </AppBar>\n        </>\n    );\n}\n\nexport default List;","import styled from \"@emotion/styled\";\n\nexport const Select = styled.select`\n    border-radius: .25rem;\n    border-color: #ababab;\n    color: #6a6a6a;\n    height: 32px;\n    padding: 0 5px;\n    width: 140px;\n    font-size: 16px;\n`","import React, {useContext} from \"react\";\nimport {caseString} from \"../../scripts/formatText\";\nimport {Select} from \"./style/Select\";\nimport {LoadItems} from \"../shared/DataLoader\";\n\n/**\n * Renders a select list with the names on the categories\n */\n\nconst NewItemOptions = () => {\n    const Data = useContext(LoadItems);\n\n    return (\n        <Select>\n            <option>Kategori</option>\n            {\n                Object.keys(Data.reference_list).map(category =>\n                    <option key={'new_items_options_' + category}>{caseString(category)}</option>\n                )\n            }\n        </Select>\n    );\n}\n\nexport default NewItemOptions","import React, {useContext} from \"react\";\nimport NewItemOptions from \"./NewItemOptions\";\nimport {AddItemToReferenceList, Delete} from \"../../scripts/firebaseCRUD\";\nimport {caseString} from \"../../scripts/formatText\";\nimport {Text} from \"../shared/style/Text\";\nimport {LoadItems} from \"../shared/DataLoader\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Button} from \"../shared/style/Button\";\n\n/**\n *  Iterates a list of items that does not exist in the reference list document (in firebase)\n *  Adds them to a document for new items (in firebase)\n *  Rendering a list of the items with the option of adding the item to a category in the reference list document (in firebase)\n */\n\nconst NewItems = () => {\n    const Data = useContext(LoadItems);\n\n    const handleUpdate = (e, item) => {\n        AddItemToReferenceList(item, e.target.value)\n        Delete(item, 'new_items');\n        Data.updateData('newItems')\n    }\n\n    return (\n        <>\n            {\n                Data.new_items.map(item => {\n                    return (\n\n                        //todo refactor till ref ?\n\n                        <form key={'new_items_form_' + item} onChange={e => handleUpdate(e, item)}>\n                            <Grid container>\n\n                                <Grid item xs>\n                                    <Text newItem>\n                                        {caseString(item)}\n                                    </Text>\n                                </Grid>\n                                <Grid item>\n                                    <NewItemOptions key={'new_items_new_items_options_' + item}/>\n                                    <Button variant={\"contained\"} disableElevation size=\"small\"  onClick={(e) => {\n                                        e.preventDefault();\n                                        Delete(item, 'new_items');\n                                        Data.updateData('newItems');\n                                    }}>\n                                        Delete\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    );\n                })\n            }\n        </>\n    )\n}\n\nexport default NewItems","import React, {useContext} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport {Button} from \"../shared/style/Button\";\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {Text} from \"../shared/style/Text\";\nimport {Row} from \"../shared/style/Row\";\nimport {LoadItems} from \"../shared/DataLoader\";\nimport {CategorizeItem} from \"../../scripts/categorizeItems\";\nimport {caseString} from \"../../scripts/formatText\";\nimport {Create} from \"../../scripts/firebaseCRUD\";\n\nconst useStyles = makeStyles((theme) => ({\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n}));\n\nconst Recipe = ({recipe}) => {\n    const Data = useContext(LoadItems);\n    const [expanded, setExpanded] = React.useState(false);\n    const classes = useStyles();\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    // Adds items from the recipe to the grocery list\n    const handleOnClick = (name, amount) => {\n        const category = CategorizeItem(name, Data.reference_list)\n        Create(Data.items, {name: caseString(name), category: category, amount: amount})\n        Data.fetchItems()\n    };\n\n\n    return (\n        <Card variant={\"outlined\"}>\n            <CardHeader\n                onClick={handleExpandClick}\n                action={\n                    <CardActions disableSpacing>\n                        <IconButton\n                            className={clsx(classes.expand, {\n                                [classes.expandOpen]: expanded,\n                            })}\n                            aria-expanded={expanded}\n                            aria-label=\"show more\"\n                        >\n                            <ExpandMoreIcon/>\n                        </IconButton>\n                    </CardActions>\n                }\n                title={\n                    <Text recipeHeadline>{recipe.name}</Text>\n                }\n            />\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                <CardContent>\n                    {\n                        recipe.ingredients.map(ingredient => (\n                                <Row recipeIngredient>\n                                    <Text>{ingredient.amount} {ingredient.name}</Text>\n                                    <Button variant={\"contained\"} disableElevation size=\"small\" onClick={(e) => {\n                                        handleOnClick(ingredient.name, ingredient.amount);\n                                        e.target.parentNode.remove()\n                                    }}>Add</Button>\n                                </Row>\n                            )\n                        )\n                    }\n                </CardContent>\n            </Collapse>\n        </Card>\n    );\n}\nexport default Recipe;","import React from \"react\";\nimport {Row} from \"../shared/style/Row\";\nimport {Input} from \"../shared/style/Input\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Button} from \"../shared/style/Button\";\n\nconst AddIngredient = ({ingredientRef,amountRef,handleAddIngredient}) => (\n    <>\n        <Grid container>\n            <Grid item xs>\n                <Input ingredient ref={ingredientRef} id={\"ingredient\"} placeholder={\"Ingredient\"}\n                       onKeyPress={e => {\n                           if (e.key === 'Enter') {\n                               handleAddIngredient()\n                           }\n                       }}/>\n            </Grid>\n            <Grid item>\n                <Input ingredientAmount ref={amountRef} id={\"amount\"} placeholder={\"Antal\"}\n                       onKeyPress={e => {\n                           if (e.key === 'Enter') {\n                               handleAddIngredient()\n                           }\n                       }}/>\n                <Button variant={\"contained\"} disableElevation size=\"small\"  onClick={e => {\n                    handleAddIngredient();\n                }}>\n                    Add\n                </Button>\n            </Grid>\n        </Grid>\n    </>\n)\n\nexport default AddIngredient;","import React, {useEffect, useRef, useState} from \"react\";\nimport {Input} from \"../shared/style/Input\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Text} from \"../shared/style/Text\";\nimport {caseString} from \"../../scripts/formatText\";\nimport {Button} from \"../shared/style/Button\";\n\n\nconst Ingredient = ({thisIngredient, ingredients, setIngredients}) => {\n    const [isUpdateable, setUpdatable] = useState(false);\n    const amount = useRef()\n    const updateItem = useRef()\n\n    useEffect(() => {\n        if (isUpdateable) {\n            updateItem.current.focus()\n            updateItem.current.select()\n        }\n    }, [isUpdateable])\n\n    const handleDecreaseAmount = () => {\n        thisIngredient.amount -= 1\n        amount.current.value -= 1;\n    }\n\n    const handleIncreaseAmount = () => {\n        let n = thisIngredient.amount\n        n++;\n        thisIngredient.amount = n\n        amount.current.value = n;\n    }\n\n    const handleDeleteIngredient = () => {\n        //todo oneline?\n        let arr = []\n        ingredients.forEach(ingredient => {\n            if (ingredient !== thisIngredient) {\n                arr.push(ingredient)\n            }\n        });\n\n        setIngredients(arr)\n    }\n\n    return (\n        <Grid container>\n            {\n                isUpdateable ?\n                    <>\n                        <Grid item xs>\n                            <Input addItem\n                                   ref={updateItem}\n                                   defaultValue={caseString(thisIngredient.name)}\n                                   onChange={(e) => thisIngredient.name = e.target.value}/>\n                        </Grid>\n\n                        <Grid item>\n                            <Button variant={\"contained\"} disableElevation size=\"small\"  decreaseAmount onClick={() => handleDecreaseAmount()}>\n                                -\n                            </Button>\n\n                            <Input addAmount ref={amount} value={thisIngredient.amount}/>\n\n                            <Button variant={\"contained\"} disableElevation size=\"small\"  increaseAmount onClick={() => handleIncreaseAmount()}>\n                                +\n                            </Button>\n\n                            <Button variant={\"contained\"} disableElevation size=\"small\"  onClick={() => {\n                                setUpdatable(false)\n                            }}>Apply</Button>\n                        </Grid>\n                    </>\n                    :\n                    <>\n                        <Grid item xs>\n                            <Text ingredient key={thisIngredient.id}\n                                  onClick={() => setUpdatable(true)}>\n                                {thisIngredient.amount} {thisIngredient.name}\n                            </Text>\n                        </Grid>\n                        <Grid item>\n                            <Button variant={\"contained\"} disableElevation size=\"small\"  onClick={() => handleDeleteIngredient()}>\n                                Delete\n                            </Button>\n                        </Grid>\n                    </>\n            }\n        </Grid>\n    )\n}\n\nexport default Ingredient","import React, {useContext, useEffect, useRef, useState} from \"react\";\nimport {Row} from \"../shared/style/Row\";\nimport {Input} from \"../shared/style/Input\";\nimport {CreateRecipe} from \"../../scripts/firebaseCRUD\";\nimport AddIngredient from \"./AddIngredient\";\nimport Ingredient from \"./Ingredient\";\nimport {getId} from \"../../scripts/idGenerator\";\nimport {LoadItems} from \"../shared/DataLoader\";\nimport {Button} from \"../shared/style/Button\";\nimport {Box} from \"@material-ui/core\";\n\n/**\n * Renders form for adding recipe\n */\n\nconst AddRecipe = () => {\n    const Data = useContext(LoadItems);\n    const [ingredients, setIngredients] = useState([])\n\n    const ingredientRef = useRef(null);\n    const amountRef = useRef(null);\n    const nameRef = useRef(null);\n\n    const recipe = {\n        name: '',\n        ingredients: ingredients,\n        id: getId()\n    }\n\n    useEffect(() => {\n        ingredientRef.current.focus()\n    }, [ingredients])\n\n\n    const handleAddIngredient = () => {\n        let ingredient = ingredientRef.current\n        let amount = amountRef.current\n\n        const reg = new RegExp('^[0-9]*$');\n\n        if (amount.value !== '' && !reg.test(amount.value)) {\n            // todo error message\n            console.log('fel eller inget nummer amount')\n        } else if (ingredient.value === '') {\n            console.log('inget namn')\n        } else {\n            ingredients.push({\n                name: ingredient.value,\n                amount: parseInt(amount.value === '' ? 1 : amount.value),\n            });\n\n            setIngredients([...ingredients]);\n            ingredient.value = '';\n            amount.value = '';\n        }\n    }\n\n    const handleSubmit = async () => {\n        if (nameRef.current.value) {\n            recipe.name = nameRef.current.value;\n        } else {\n            console.log('inget namn på recept')\n        }\n        await CreateRecipe(recipe);\n        Data.fetchRecipes()\n\n        setIngredients([])\n        nameRef.current.value = '';\n        ingredientRef.current.value = '';\n        amountRef.current.value = '';\n    }\n\n    return (\n        <>\n                <Input recipeName\n                       ref={nameRef}\n                       id={\"name\"}\n                       onChange={(e) => {\n                           recipe.name = e.target.value\n                       }}\n                       placeholder={\"Namn\"}/>\n            {\n                ingredients.map(ingredient =>\n                    <Ingredient thisIngredient={ingredient}\n                                ingredients={ingredients}\n                                setIngredients={setIngredients}/>)\n            }\n            <AddIngredient ingredientRef={ingredientRef}\n                           amountRef={amountRef}\n                           handleAddIngredient={handleAddIngredient.bind(this)}/>\n            <Row>\n                <Button variant={\"contained\"} disableElevation size=\"small\"  onClick={e => {\n                    handleSubmit(e)\n                }}>\n                    Add Recipe\n                </Button>\n            </Row>\n            <Row>\n\n            </Row>\n        </>\n    )\n}\nexport default AddRecipe","import React, {useContext} from \"react\";\nimport Recipe from \"./Recipe\";\nimport {LoadItems} from \"../shared/DataLoader\";\nimport AddRecipe from \"./AddRecipe\";\nimport Drawer from \"../Drawer\";\nimport {Button} from \"../shared/style/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport {DeleteRecipe} from \"../../scripts/firebaseCRUD\";\nimport {Text} from \"../shared/style/Text\";\nimport {Box} from \"@material-ui/core\";\n\nconst Recipes = () => {\n    const Data = useContext(LoadItems);\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleDelete = (recipe) => {\n        DeleteRecipe(recipe, 'recipes')\n        Data.fetchRecipes();\n    }\n\n    const recipeToDelete = (recipe) => (\n        <Box>\n            <Text inline>{recipe.name}</Text>\n            <Button rightAligned onClick={handleClickOpen}>\n                Delete\n            </Button>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"Do you want to delete this recipe?\"}\n                </DialogTitle>\n                <DialogActions>\n                    <Button onClick={() => {\n                        handleClose()\n                        handleDelete(recipe)\n                    }}>\n                        Yes\n                    </Button>\n                    <Button onClick={handleClose} autoFocus>\n                        No\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Box>\n    )\n\n    const DrawerContent = [\n        <Box m={1}>\n            <AddRecipe/>\n            {Data.recipes.map(recipe => recipeToDelete(recipe))}\n        </Box>\n    ]\n\n    return (\n        <>\n            <Drawer anchor={'right'} content={DrawerContent} disableClickToClose={true}/>\n\n            {Data.recipes.map(recipe => (\n                <Recipe recipe={recipe} key={recipe.name}/>\n            ))}\n        </>\n    )\n}\nexport default Recipes","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport List from \"./components/list/List\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport NewItems from \"./components/newItems/NewItems\";\nimport {Loader} from \"./components/shared/DataLoader\";\nimport {App} from \"./components/App\";\nimport Recipes from \"./components/recipes/Recipes\";\nimport Container from \"@material-ui/core/Container\";\n\nconst routing = (\n    <Loader>\n        <BrowserRouter>\n            <Container style={{top: \"50px\", position: \"relative\"}}>\n                <Route path=\"/\" component={App}/>\n                <Route exact path=\"/list\" component={List}/>\n                <Route exact path=\"/recipes\" component={Recipes}/>\n                <Route exact path=\"/newItems\" component={NewItems}/>\n            </Container>\n        </BrowserRouter>\n    </Loader>\n)\n\nReactDOM.render(\n    routing,\n    document.getElementById('root')\n);","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Text} from \"./shared/style/Text\";\nimport Drawer from \"./Drawer\";\nimport List from \"./list/List\";\nimport Redirect from \"react-router-dom/es/Redirect\";\n\n//tests\n// add item\n// add\n// amount\n// adds newItem\n// correct category\n//new items\n// delete\n// categorize\n//add recipe\n//name\n//ingredient & amount\n//edit name & amount & apply\n// add recipe\n//recipes\n//open & close(outside & button)\n// delete\n// add ingredient\n//import from todoist\n//adds items\n//adds \"newItems\"\n\n//fixme\n// stop marking when double click buttons\n// order newItem categories\n// routing & actions\n// confirmation when deleting recipe\n// undo categorizing newitems\n// add posibility to edit existing recipe?\n// caseString() in adding recipe\n// clear items in todoist after import\n// keep items in recipes after added to list?\n// add item suggestions\n// external context\n// add error mesages\n// seperate index export files\n// add 404\n// background on addItem form\n// recently added section?\n\n\nexport const App = () => {\n    const drawerContent = [\n        <Link to=\"/list\" style={{textDecoration: 'none'}}>\n            <Text routerLink>\n                List\n            </Text>\n        </Link>,\n        <Link to=\"/recipes\" style={{textDecoration: 'none'}}>\n            <Text routerLink>\n                Recipes\n            </Text>\n        </Link>,\n        <Link to=\"/newItems\" style={{textDecoration: 'none'}}>\n            <Text routerLink>\n                New items\n            </Text>\n        </Link>\n    ]\n\n    return (\n        <>\n            <Drawer anchor={'left'} content={drawerContent}/>\n            <Redirect to='/recipes'/>\n        </>\n    );\n}"],"sourceRoot":""}