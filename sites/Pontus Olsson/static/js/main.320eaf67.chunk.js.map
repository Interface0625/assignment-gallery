{"version":3,"sources":["components/Header.js","components/Footer.js","components/Note.js","components/AddNote.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","classes","makeStyles","root","background","borderBottom","font","fontSize","color","fontFamily","paddingRight","icon","useStyles","AppBar","position","Toolbar","className","Typography","Footer","grid","backgroundColor","socialText","textAlign","paddingTop","class","Grid","container","item","xs","variant","BottomNavigation","BottomNavigationAction","showLabel","label","Note","props","margin","paddingBottom","boxShadow","Card","CardContent","gutterBottom","title","content","Button","onClick","onDelete","id","AddNote","marginTop","padding","width","useState","note","setNote","handleChange","event","target","name","value","prevNote","Input","placeholder","onChange","autoComplete","multiline","rows","onAdd","preventDefault","App","notes","setNotes","marginBottom","deleteNote","prevNotes","filter","noteItem","index","console","log","direction","Container","maxWidth","newNote","alert","map","sm","lg","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"mTAwCeA,MAjCf,WAEE,IAmBMC,EADYC,YAlBH,CACbC,KAAM,CACJC,WAAY,UACZC,aAAc,mBAGhBC,KAAM,CACJC,SAAU,OACVC,MAAO,QACPC,WAAY,YACZC,aAAc,QAEhBC,KAAM,CACJJ,SAAU,SACVC,MAAO,SAKKI,GAChB,OACE,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,CAASC,UAAWf,EAAQE,MAC1B,kBAACc,EAAA,EAAD,CAAYD,UAAWf,EAAQK,MAA/B,YACA,kBAAC,IAAD,CAAWU,UAAWf,EAAQU,U,mECcvBO,MAvCf,WAEI,IAaMjB,EADYC,YAZH,CACXiB,KAAK,CACDC,gBAAiB,WAErBC,WAAW,CACPC,UAAW,SACXC,WAAY,OACZH,gBAAiB,YAMTR,GAEhB,OACI,yBAAKY,MAAM,gBACP,kBAACC,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACX,EAAA,EAAD,CAAYY,QAAQ,KAAKb,UAAWf,EAAQoB,YAA5C,+BAIJ,kBAACI,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACE,EAAA,EAAD,CAAkBd,UAAWf,EAAQkB,MACrC,kBAACY,EAAA,EAAD,CAAwBC,WAAS,EAACC,MAAM,UAAUtB,KAAM,kBAAC,IAAD,QACxD,kBAACoB,EAAA,EAAD,CAAwBC,WAAS,EAACC,MAAM,WAAWtB,KAAM,kBAAC,IAAD,QACzD,kBAACoB,EAAA,EAAD,CAAwBC,WAAS,EAACC,MAAM,YAAYtB,KAAM,kBAAC,IAAD,a,yCCI/DuB,MAlCf,SAAeC,GACX,IAWMlC,EADYC,YAVH,CACXC,KAAM,CACJiC,OAAQ,OACRd,UAAW,SACXe,cAAe,OACfC,UAAW,qBAMD1B,GAMhB,OAEI,kBAAC2B,EAAA,EAAD,CAAMvB,UAAWf,EAAQE,MACrB,kBAACqC,EAAA,EAAD,KACI,kBAACvB,EAAA,EAAD,CAAYD,UAAU,cAAcR,MAAM,gBAAgBiC,cAAY,GAClE,wBAAIzB,UAAU,cAAcmB,EAAMO,QAEtC,kBAACzB,EAAA,EAAD,CAAYD,UAAU,cAAcR,MAAM,gBAAgBiC,cAAY,GAClE,uBAAGzB,UAAU,aAAamB,EAAMQ,WAGxC,kBAACC,EAAA,EAAD,CAAQC,QAfhB,WACIV,EAAMW,SAASX,EAAMY,MAce,kBAAC,IAAD,MAAhC,Y,wBCkCGC,MAjEf,SAAiBb,GAEb,IAiBMlC,EADYC,YAhBH,CACXC,KAAM,CACJiC,OAAQ,SACRa,UAAW,OACXC,QAAS,OACT5B,UAAW,SACXC,WAAY,SACZe,UAAW,oBAGbK,QAAS,CACLQ,MAAO,QACPf,OAAQ,SAKAxB,GAnBG,EAqBKwC,mBAAS,CAC7BV,MAAO,GACPC,QAAS,KAvBM,mBAqBZU,EArBY,KAqBNC,EArBM,KA4BnB,SAASC,EAAaC,GAAO,IAAD,EACFA,EAAMC,OAArBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MAGbL,GAAQ,SAAAM,GACJ,OAAO,2BACAA,GADP,kBAEKF,EAAOC,OAepB,OACI,kBAACpB,EAAA,EAAD,CAAMvB,UAAaf,EAAQE,MACvB,kBAACsB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACiC,EAAA,EAAD,CAAO7C,UAAU,QAAQ8C,YAAY,QAAQf,GAAG,4BAA4BgB,SAAUR,EAAcG,KAAK,QAAQC,MAAON,EAAKX,MAAOsB,aAAa,SAEjJ,kBAACvC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACiC,EAAA,EAAD,CAAO7C,UAAWf,EAAQ0C,QAASmB,YAAY,QAAQG,WAAS,EAACC,KAAM,EAAGnB,GAAG,4BAA4BgB,SAAUR,EAAcG,KAAK,UAAUC,MAAON,EAAKV,WAE5J,kBAAClB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACgB,EAAA,EAAD,CAAQ5B,UAAU,eAAe6B,QApBzC,SAAoBW,GAChBrB,EAAMgC,MAAMd,GACZC,EAAQ,CACJZ,MAAM,GACNC,QAAQ,KAIZa,EAAMY,kBAYmDvC,QAAQ,YAAYrB,MAAM,WAA/E,eCuBG6D,MA9Ef,WAAe,IAAD,EAEejB,mBAAS,IAFxB,mBAEJkB,EAFI,KAEGC,EAFH,KAYJtE,EADYC,YAPH,CACXkC,OAAQ,CACNoC,aAAc,SAMJ5D,GAehB,SAAS6D,EAAW1B,GAEhBwB,GAAS,SAAAG,GACL,OAAOA,EAAUC,QAAO,SAACC,EAAUC,GAE/B,OADAC,QAAQC,IAAIL,EAAU3B,IACf8B,IAAU9B,QAM7B,OAEI,yBAAK/B,UAAU,OAEf,kBAACS,EAAA,EAAD,CAAMC,WAAS,EAACsD,UAAU,UACtB,kBAACvD,EAAA,EAAD,CAAME,MAAI,GAAC,kBAAC,EAAD,QAKf,kBAACsD,EAAA,EAAD,CAAWC,SAAS,MACpB,kBAAC,EAAD,CAAWf,MAnCf,SAAiBgB,GACb,GAAoB,KAAjBA,EAAQzC,OAAkC,KAAnByC,EAAQxC,QAC9B,OAAOyC,MAAM,sBAGjBb,GAAS,SAAAG,GAEN,MAAM,GAAN,mBAAWA,GAAX,CAAsBS,WA8BzB,kBAACF,EAAA,EAAD,CAAWC,SAAS,MAIpB,kBAACzD,EAAA,EAAD,CAAMC,WAAS,EAACsD,UAAU,MAAMhE,UAAWf,EAAQmC,QAClDkC,EAAMe,KAAI,SAACT,EAAUC,GAClB,OACA,kBAACpD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI0D,GAAI,EAAGC,GAAI,GAC9B,kBAAC,EAAD,CACAC,IAAKX,EACL9B,GAAI8B,EACJnC,MAAOkC,EAASlC,MAChBC,QAASiC,EAASjC,QAClBG,SAAU2B,UASd,kBAAC,EAAD,QCtEYgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3B,QAAQ2B,MAAMA,EAAMC,c","file":"static/js/main.320eaf67.chunk.js","sourcesContent":["import React from \"react\"\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\"\nimport TodayIcon from '@material-ui/icons/Today';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nfunction Header(){\n\n  const styles = {\n    root: {\n      background: '#f0f0f0',\n      borderBottom: '10px solid grey'\n      \n    },\n    font: {\n      fontSize: '2rem',\n      color: 'black',\n      fontFamily: 'Comfortaa',\n      paddingRight: '1rem'\n    },\n    icon: {\n      fontSize: '2.5rem',\n      color: '#444'\n    }\n  };\n  \n  const useStyles = makeStyles(styles)\n  const classes = useStyles()\n  return(\n    <AppBar position=\"static\">\n      <Toolbar className={classes.root}>\n        <Typography className={classes.font}>Notes.js</Typography>\n        <TodayIcon className={classes.icon}/>\n      </Toolbar>\n\n    </AppBar>\n  )\n\n}\nexport default Header\n\n\n\n","import React from 'react'\nimport { BottomNavigation, BottomNavigationAction,Grid, Typography} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\n\n\nfunction Footer(){\n\n    const styles = {\n        grid:{\n            backgroundColor: '#f0f0f0',\n        },\n        socialText:{\n            textAlign: 'center',\n            paddingTop: '1rem',\n            backgroundColor: '#f0f0f0'\n\n        }\n      };\n      \n    const useStyles = makeStyles(styles)\n    const classes = useStyles()\n\n    return (\n        <div class=\"fixed-bottom\">\n            <Grid container>\n                <Grid item xs={12}>\n                    <Typography variant=\"h6\" className={classes.socialText}>\n                    Follow us on social media.\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <BottomNavigation className={classes.grid}>\n                    <BottomNavigationAction showLabel label=\"Twitter\" icon={<TwitterIcon />} />\n                    <BottomNavigationAction showLabel label=\"Facebook\" icon={<FacebookIcon />} />\n                    <BottomNavigationAction showLabel label=\"Instagram\" icon={<InstagramIcon />} />\n                    </BottomNavigation>\n                </Grid>\n            </Grid>\n        </div>\n        \n    )\n}\n\n\nexport default Footer","import React from 'react'\nimport { Card, CardContent, Typography, Button} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n\n\nfunction Note (props){\n    const styles = {\n        root: {\n          margin: '1rem',\n          textAlign: 'center',\n          paddingBottom: '1rem',\n          boxShadow: '0px 0px 20px 2px',\n        },\n    \n      };\n      \n    const useStyles = makeStyles(styles)\n    const classes = useStyles()\n\n    function handleDelete(){\n        props.onDelete(props.id)   \n    }\n    \n    return (\n        \n        <Card className={classes.root}>\n            <CardContent>\n                <Typography className=\"cardContent\" color=\"textSecondary\" gutterBottom>\n                    <h5 className=\"card-title\">{props.title}</h5>\n                </Typography>\n                <Typography className=\"cardContent\" color=\"textSecondary\" gutterBottom>\n                    <p className=\"card-text\">{props.content}</p>\n                </Typography>\n            </CardContent>\n            <Button onClick ={handleDelete}><DeleteIcon />DELETE</Button>\n        </Card>\n    )\n}\n\nexport default Note","import React, { useState } from \"react\"\nimport { Button, Input, Card, Grid} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\n\n\nfunction AddNote(props){\n\n    const styles = {\n        root: {\n          margin: '0.5rem',\n          marginTop: '2rem',\n          padding: '2rem',\n          textAlign: 'center',\n          paddingTop: '1.5rem',\n          boxShadow: '0px 0px 20px 2px'\n          \n        },\n        content: {\n            width: '12rem',\n            margin: '1rem'\n        }\n      };\n      \n    const useStyles = makeStyles(styles)\n    const classes = useStyles()\n    \n    const [note, setNote] = useState({\n        title: \"\",\n        content: \"\",\n        \n        \n    })\n\n    function handleChange(event){\n        const {name, value} = event.target\n        \n\n        setNote(prevNote => {\n            return {\n                ...prevNote,\n                [name]: value\n            }\n        })\n    }\n    function submitNote(event){\n        props.onAdd(note)\n        setNote({\n            title:\"\",\n            content:\"\",\n            \n        })\n        \n        event.preventDefault() //prevent reload of page.\n    }\n   \n    return(\n        <Card className = {classes.root}>\n            <Grid item xs={12}>     \n            <Input className=\"title\" placeholder=\"Title\" id=\"standard-multiline-static\" onChange={handleChange} name=\"title\" value={note.title} autoComplete=\"off\" />\n            </Grid> \n            <Grid item xs={12}>\n            <Input className={classes.content} placeholder=\"Notes\" multiline rows={1} id=\"standard-multiline-static\" onChange={handleChange} name=\"content\" value={note.content} />\n            </Grid>\n            <Grid item xs={12}>\n            <Button className=\"submitButton\" onClick={submitNote}variant=\"contained\" color=\"default\" >Add Note</Button>\n            </Grid>\n        </Card>\n    )\n}\n\nexport default AddNote","import React, {useState} from \"react\"\nimport { Grid, Container } from '@material-ui/core';\nimport Header from \"./Header.js\"\nimport Footer from \"./Footer.js\"\nimport Note from \"./Note.js\"\nimport Textfield from \"./AddNote.js\"\nimport { makeStyles } from '@material-ui/core/styles'\n\n\nfunction App(){\n\n    const[notes, setNotes] = useState([])\n\n    const styles = {\n        margin: {\n          marginBottom: '17vh'\n        },\n    \n      };\n      \n    const useStyles = makeStyles(styles)\n    const classes = useStyles()\n\n    function addNote(newNote){\n        if(newNote.title ===\"\" || newNote.content ===\"\"){\n            return alert(\"Fill out the form.\")\n        }\n        else{\n        setNotes(prevNotes => {\n            \n           return [...prevNotes, newNote]\n            \n        })\n        }\n    }\n\n    function deleteNote(id){\n        \n        setNotes(prevNotes =>{\n            return prevNotes.filter((noteItem, index) =>{\n                console.log(prevNotes[id]);\n                return index !== id \n                \n                \n            })\n        })\n    }\n    return( \n    \n        <div className=\"app\">\n        \n        <Grid container direction=\"column\">\n            <Grid item><Header /></Grid>\n        </Grid>\n\n\n\n        <Container maxWidth=\"xs\">\n        <Textfield onAdd={addNote}/>\n        </Container>\n        <Container maxWidth=\"lg\">\n        \n        \n       \n        <Grid container direction=\"row\" className={classes.margin}>\n        {notes.map((noteItem, index) => {\n            return (\n            <Grid item xs={12} sm={6} lg={4}>\n            <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n            />\n            </Grid>\n            )\n            \n        })}\n        </Grid>\n        \n        </Container>\n        <Footer />\n    </div>\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}