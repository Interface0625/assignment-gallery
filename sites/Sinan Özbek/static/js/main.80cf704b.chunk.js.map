{"version":3,"sources":["components/Form.js","components/Weather.js","components/SearchAppBar.js","App.js","index.js"],"names":["Form","props","onSubmit","getWeather","type","placeholder","name","Weather","description","city","country","error","temperature","feelsTemp","minTemp","maxTemp","weatherDescription","split","keyWordsCloud","keyWordsSun","keyWordsClear","keyWordsMist","keyWordsRain","i","length","includes","src","alt","style","width","height","matchValues","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","MapIcon","HomeIcon","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","InputBase","input","inputProps","App","useState","weather","setWeather","APIKEY","e","a","target","elements","value","preventDefault","fetch","then","res","json","apiData","data","sys","Math","round","main","temp","feels_like","temp_min","temp_max","Fragment","CssBaseline","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80cf704b.chunk.js","sourcesContent":["import React from 'react';\n\n \nconst Form = (props) => {\n   \n    return( \n        <form onSubmit={props.getWeather}>\n            <input \n            type='text'\n            placeholder='city'\n            name='city'\n            />\n            <input\n            type='text'\n            placeholder='country'\n            name='country'\n            />\n            <button>Submit</button>\n        </form>\n    )\n}\nexport default Form;\n","import React from 'react';\n\n\nconst Weather = ({description, city, country, error, temperature, feelsTemp, minTemp, maxTemp}) => {\n\n  function matchValues(){\n    if(description){\n      const weatherDescription = description.split(' ')\n      const keyWordsCloud =['cloudy', 'clouds', 'cloud', 'overcast']\n      const keyWordsSun =['sun', 'sunny']\n      const keyWordsClear =['clear', 'sky']\n      const keyWordsMist =['mist']\n      const keyWordsRain =['rain', 'rainy']\n\n      for(let i = 0; i < weatherDescription.length; i++) {\n        if(keyWordsCloud.includes(weatherDescription[i])) {\n          return <img src=\"/img/clouds.jpg\" alt=\"clouds\" style = {{width: 400, height:400}}/>\n      }\n    else if(keyWordsSun.includes(weatherDescription[i])){\n      return <img src=\"/img/sun.jpg\" alt=\"sun\" style = {{width: 400, height:400}}/>\n\n    }\n    else if(keyWordsMist.includes(weatherDescription[i])){\n      return <img src=\"/img/mistCity.jpg\" alt=\"mist\" style = {{width: 400, height:400}}/>\n\n    }\n    else if(keyWordsClear.includes(weatherDescription[i])){\n      return <img src=\"/img/clear.jpg\" alt=\"clear\" style = {{width: 400, height:400}}/>\n\n    }\n    else if(keyWordsRain.includes(weatherDescription[i])){\n      return <img src=\"/img/rain.jpg\" alt=\"rain\" style = {{width: 400, height:400}}/>\n\n    }\n    }\n      }\n    }\n\n    return( \n      <div>\n        {city && country && <p>{city}, {country}</p>}\n        {temperature && <p>Temperature: {temperature} °C</p>}\n        {feelsTemp && <p>feels like: {feelsTemp} °C</p>}\n        {minTemp && <p>min. temperature: {minTemp} °C</p>}\n        {maxTemp && <p>max. temperature: {maxTemp} °C</p>}\n        {description && <p>Condition: {description}</p>}\n        {error && <p>{error}</p>}\n        {description && matchValues()}\n      </div>\n    )\n}\nexport default Weather;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  MapIcon: {\n    marginRight: theme.spacing(2),\n  },\n  HomeIcon: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nfunction SearchAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n          <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\nexport default SearchAppBar;","import React,{useState} from 'react';\nimport './App.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nimport SearchAppBar from './components/SearchAppBar'\n\n\nfunction App() {\n  const [weather,setWeather] = useState([])\n  const APIKEY = 'e65f20788ec89b4daacf899635e95bf7'\n\n  async function fetchData(e) {\n    const city = e.target.elements.city.value\n    const country = e.target.elements.country.value\n      e.preventDefault()\n    const apiData = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${APIKEY}&units=metric`)\n      .then( res => res.json())\n      if(city && country){\n      setWeather({\n        data: apiData,\n        city: apiData.city,\n        country: apiData.sys.country,\n        description: apiData.weather[0].description,\n        temperature: Math.round(apiData.main.temp),\n        feelsTemp: Math.round(apiData.main.feels_like),\n        minTemp: Math.round(apiData.main.temp_min),\n        maxTemp: Math.round(apiData.main.temp_max),\n        error:\"\"\n      }\n      )}else{\n        setWeather({\n          data: '',\n          city: '',\n          country: '',\n          description: '',\n          temperature: '',\n          feelsTemp: '',\n          minTemp: '',\n          maxTemp:'',\n          error:\"oj, något gick snett där\"\n        }\n        )}\n      }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n        <div className=\"App\">\n        <SearchAppBar />\n        \n          <h1>WEATHER APP</h1>\n            <Form getWeather={fetchData} />\n              <Weather\n              city={weather.city}\n              country={weather.country}\n              description={weather.description}\n              temperature={weather.temperature}\n              feelsTemp={weather.feelsTemp}\n              minTemp={weather.minTemp}\n              maxTemp={weather.maxTemp}\n              error={weather.error}\n              />\n              {console.log(weather.data)}\n        \n        </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}